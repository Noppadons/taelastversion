generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enum สำหรับกำหนด Role
enum Role {
  ADMIN
  USER
}

// Model ใหม่สำหรับ User
model User {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Game {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  imageUrl    String?
  teams       Team[]
  metaGuides  MetaGuide[]
  playerStats PlayerStat[]
}

model Team {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  logoUrl     String?
  description String?  @db.Text
  gameId      Int
  game        Game     @relation(fields: [gameId], references: [id])
  players     Player[]
}

model Player {
  id        Int          @id @default(autoincrement())
  nickname  String
  realName  String?
  imageUrl  String?
  role      String?
  teamId    Int
  team      Team         @relation(fields: [teamId], references: [id], onDelete: Cascade)
  stats     PlayerStat[]
}

model NewsArticle {
  id          Int      @id @default(autoincrement())
  title       String
  content     String   @db.Text
  imageUrl    String?
  author      String   @default("TAE-ESPORT")
  publishedAt DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model MetaGuide {
  id          Int      @id @default(autoincrement())
  title       String
  content     String   @db.Text
  author      String   @default("TAE Analysis")
  publishedAt DateTime @default(now())
  updatedAt   DateTime @updatedAt
  gameId      Int
  game        Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)
}

model PlayerStat {
  id        Int    @id @default(autoincrement())
  stats     Json
  player    Player @relation(fields: [playerId], references: [id], onDelete: Cascade)
  playerId  Int
  game      Game   @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId    Int

  @@unique([playerId, gameId])
}